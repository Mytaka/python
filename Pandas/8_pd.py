import numpy as np
import pandas as pd


df_1 = pd.DataFrame({'col_1': [5, 6, np.nan, 3, 7], 
                     'col_2': [27, 6, 7, 40, 70], 
                     'col_3': [1, 45, 6, 62, 7]}, 
                     index=['row_1', 'row_2', 'row_3', 'row_4', 'row_5'])

df_2= pd.DataFrame({'col_1': [5, 6, 7, np.nan, 3], 
                    'col_2': [27, 6, 7, 4, 7], 
                    'col_3': [1, 45, 6, 62, 7]}, 
                    index=['row_1', 'row_2', 'row_3', 'row_4', 'row_5'])

series = pd.Series( [5, 6, np.nan, 1, 7], 
                   index=['row_10', 'col_2', 'row 3', 'row 4', 'row_5'])

np.nan == np.nan # всегда False
np.nan < 100     # всегда False 

series == 5  # возвращает сирию с булевыми значениями
series > [1, 2, 3, 4, 5]          # поэлементное сравнение
series == series                  # поиск np.nan
series > df_1['col_1']            # должны быть одинаковые индексы с одинаковой последовательностю
df_1[ 'col_1'] <= df_1[ 'col_2']

df_1 == 5 # поэлементное сравнение
df_1 > [1, 3, 10]   # количество должно совпадать с количесвтом столбцов
df_1 == df_2        # индексы должны совпадать как по строкам, так и по столбцам. 
df_1 == df_2[['col_2', 'col_1', 'col_3']] # должны быть одинаковые индексы с одинаковой последовательностю

# !!! позволяют сравнивать таблици с разными индексами !!!
# eq() == 
# ne() != 
# le() <= 
# lt() < 
# ge() >= 
# gt() >

series.le(df_1['col_3'])
df_1.le(df_2[['col_2', 'col_1']])
df_1.le([10, 20, 30, 7, 8], axis=0)

# !!! При использовании метода еquals(), значения Nan с одинаковыми индексами рассматриваются как равные, 
# а также индексы строк и столбцов должны быть одинаковыми и в одинаковом порядке. !!!

df_1.equals(df_1)    # возвращает один булен      # True
df_1.equals(df_1[['col_2', 'col_1', 'col_3']])    # False
df_1.equals(df_2)                                 # False
series.equals(series)                             # True

